name: Docker Build and Push

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and tag Docker image
        run: |
          docker build -t strapi-app:latest -t duggana1994/strapi-app:${{ github.sha }} .
          docker push duggana1994/strapi-app:${{ github.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Render new ECS Task Definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: karthik-strapi
          image: duggana1994/strapi-app:${{ github.sha }}

      - name: Register ECS Task Definition
        id: register-task
        shell: bash
        run: |
          TASK_DEF_PATH="${{ steps.render-task-def.outputs.task-definition }}"
    
          RESPONSE=$(aws ecs register-task-definition --cli-input-json file://"$TASK_DEF_PATH")
          TASK_DEF_ARN=$(echo "$RESPONSE" | jq -r '.taskDefinition.taskDefinitionArn')
    
          echo "task_def_arn=$TASK_DEF_ARN" >> $GITHUB_OUTPUT
          echo "âœ… Task Definition ARN: $TASK_DEF_ARN"


      - name: Update AppSpec with new ARN
        run: |
          NEW_TASK_DEFINITION_ARN="${{ steps.register-task-def.outputs.NEW_TASK_DEFINITION_ARN }}"
          sed -i "s|<TASK_DEFINITION_ARN>|$NEW_TASK_DEFINITION_ARN|g" appspec.yaml
      
      - name: Upload AppSpec to S3
        run: aws s3 cp appspec.yaml s3://karthikduggana-strapi/appspec.yaml --region us-east-1

      - name: Trigger CodeDeploy Deployment
        run: |
          aws deploy create-deployment \
            --application-name karthik-codedeploy-app \
            --deployment-group-name karthik-deployment-group \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --s3-location bucket=karthikduggana-strapi,key=appspec.yaml,bundleType=YAML \
            --description "Deployed from GitHub Actions with SHA ${{ github.sha }}"